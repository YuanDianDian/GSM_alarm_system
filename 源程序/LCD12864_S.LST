C51 COMPILER V9.56.0.0   LCD12864_S                                                        01/13/2017 21:39:47 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE LCD12864_S
OBJECT MODULE PLACED IN LCD12864_S.OBJ
COMPILER INVOKED BY: D:\Program Files (x86)\MDK5\C51\BIN\C51.EXE LCD12864_S.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEN
                    -D TABS(2)

line level    source

   1          #include "LCD12864_S.h"
   2          
   3          /**************************************************************
   4                         iO口宏定义区
   5          ***************************************************************/
   6          sbit CS =P2^2;
   7          sbit SID=P2^3;//r/w
   8          sbit SCK=P2^4;//e
   9          /*******************************************************************
  10                        常量声明区
  11          ********************************************************************/     
  12          unsigned char code AC_TABLE[]={                  //坐标编码
  13          0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,
  14          0x90,0x91,0x92,0x93,0x94,0x95,0x96,0x97,
  15          0x88,0x89,0x8a,0x8b,0x8c,0x8d,0x8e,0x8f,
  16          0x98,0x99,0x9a,0x9b,0x9c,0x9d,0x9e,0x9f,
  17          };
  18          /****************************************************************
  19           声明：建议读者先查阅我们提供的12864word文档资料，理解12864定坐标的
  20           方式。                         
  21                        发送一个字节
  22          *****************************************************************/
  23          void SendByte(unsigned char Dbyte)
  24          {
  25   1        unsigned char i;
  26   1        for(i=0;i<8;i++)
  27   1        {
  28   2          SCK = 0;
  29   2          Dbyte=Dbyte<<1;
  30   2          SID = CY;
  31   2          SCK = 1;
  32   2          SCK = 0;
  33   2        }
  34   1      }
  35          /**********************************************************
  36                        接收一个字节
  37          ***********************************************************/
  38          
  39          unsigned char ReceiveByte(void)
  40          {
  41   1        unsigned char i,temp1,temp2;
  42   1        temp1=temp2=0;
  43   1        for(i=0;i<8;i++)
  44   1        {
  45   2          temp1=temp1<<1;
  46   2          SCK = 0;
  47   2          SCK = 1;                
  48   2          SCK = 0;
  49   2          if(SID) temp1++;
  50   2        }
  51   1        for(i=0;i<8;i++)
  52   1        {
  53   2          temp2=temp2<<1;
  54   2          SCK = 0;
C51 COMPILER V9.56.0.0   LCD12864_S                                                        01/13/2017 21:39:47 PAGE 2   

  55   2          SCK = 1;
  56   2          SCK = 0;
  57   2          if(SID) temp2++;
  58   2        }
  59   1        return ((0xf0&temp1)+(0x0f&temp2));
  60   1      }
  61          /****************************************************************
  62                                检查忙状态
  63          ******************************************************************/
  64          void CheckBusy( void )
  65          {
  66   1        do SendByte(0xfc);     //11111,RW(1),RS(0),0
  67   1        while(0x80&ReceiveByte());
  68   1      }
  69          
  70          /******************************************************************
  71                     写一个字节的指令
  72          *******************************************************************/
  73          void WriteCommand( unsigned char Cbyte )
  74          {
  75   1        CS = 1;
  76   1        CheckBusy();
  77   1        SendByte(0xf8);          //11111,RW(0),RS(0),0
  78   1        SendByte(0xf0&Cbyte);
  79   1        SendByte(0xf0&Cbyte<<4);
  80   1        CS = 0;
  81   1      }
  82          /*************************************************************
  83                           写一个字节的数据
  84          **************************************************************/
  85          void WriteData( unsigned char Dbyte )
  86          {
  87   1        CS = 1;
  88   1        CheckBusy();
  89   1        SendByte(0xfa);          //11111,RW(0),RS(1),0
  90   1        SendByte(0xf0&Dbyte);
  91   1        SendByte(0xf0&Dbyte<<4);
  92   1        CS = 0;
  93   1      }
  94          
  95          /******************************************************************
  96                                   lcd初始化函数
  97          *******************************************************************/
  98          void LcmInit( void )
  99          {
 100   1           WriteCommand(0x30);
 101   1           WriteCommand(0x03);
 102   1           WriteCommand(0x0c);
 103   1           WriteCommand(0x01);
 104   1           WriteCommand(0x06);
 105   1      }
 106          
 107          /*******************************************************************************************************
 108                                           设定光标函数
 109          ********************************************************************************************************/
 110          void Location_xy_12864(unsigned char x,unsigned char y)
 111          {
 112   1        switch(x)
 113   1        {
 114   2          case 0:
 115   2            x=0x80;break;
 116   2          case 1:
C51 COMPILER V9.56.0.0   LCD12864_S                                                        01/13/2017 21:39:47 PAGE 3   

 117   2            x=0x90;break;
 118   2          case 2:
 119   2            x=0x88;break;
 120   2          case 3:
 121   2            x=0x98;break;
 122   2          default:
 123   2            x=0x80;
 124   2        }
 125   1        y=y&0x07;
 126   1        WriteCommand(0x30);
 127   1        WriteCommand(y+x);
 128   1        WriteCommand(y+x);
 129   1      
 130   1      }
 131          /***********************************************************************************
 132                            清除文本
 133          ************************************************************************************/
 134          void LcmClearTXT( void )
 135          {
 136   1        unsigned char i;
 137   1        WriteCommand(0x30);
 138   1        WriteCommand(0x80);
 139   1        for(i=0;i<64;i++)
 140   1        WriteData(0x20);
 141   1        Location_xy_12864(0,0);     
 142   1      }
 143          /**************************************************************************************
 144                             清除图片
 145          *****************************************************************************************/
 146          void LcmClearBMP( void )
 147          {
 148   1        unsigned char i,j;
 149   1        WriteCommand(0x34);
 150   1        WriteCommand(0x36);
 151   1        for(i=0;i<32;i++)
 152   1        {
 153   2          WriteCommand(0x80|i);
 154   2          WriteCommand(0x80);
 155   2          for(j=0;j<32;j++)
 156   2          WriteData(0);
 157   2        }
 158   1      }
 159          
 160          
 161          
 162          /****************************************************************************************
 163                                显示字符串
 164          *****************************************************************************************/
 165          void PutStr(unsigned char row,unsigned char col,unsigned char *puts)
 166          {    
 167   1        WriteCommand(0x30);
 168   1        WriteCommand(AC_TABLE[8*row+col]);
 169   1        while(*puts != '\0')
 170   1        {
 171   2          if(col==8)
 172   2          {
 173   3            col=0;
 174   3            row++;
 175   3          }
 176   2          if(row==4) row=0;
 177   2          WriteCommand(AC_TABLE[8*row+col]);
 178   2          WriteData(*puts);
C51 COMPILER V9.56.0.0   LCD12864_S                                                        01/13/2017 21:39:47 PAGE 4   

 179   2          puts++;
 180   2          if(*puts != '\0')
 181   2          {
 182   3            WriteData(*puts);
 183   3            puts++;
 184   3            col++;
 185   3          }  
 186   2        }
 187   1      }
 188          
 189          
 190                   


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    374    ----
   CONSTANT SIZE    =     32    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       2
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
